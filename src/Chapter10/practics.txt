1.类是用户自定义的类型的定义。类声明指定了数据将如何存储，同时指定了用来访问和操纵这些数据的方法。

2.类表示人们可以类方法的公有接口对类对象执行的操作，这是抽象。类的数据可以是私有的（默认值），这意味这只能通过成员函数来访问这些数据。这就是数据隐藏
   实现的具体细节，都是隐藏的，这就是封装。

3.类定义了一种类型，包括如何使用它。对象是一个变量或者其他的数据对象（如由new生成的），并根据类定义被创建和使用。
  类和对象之间的关系同标准类型与其变量之间的关系相同。

4.创建给定类的多个对象，则每个对象都有自己的数据内存空间，但所有对象都使用同一组成员函数。

5.
class BankAccount
{
    private:
         string mName;
         string mAccountNumber;
         double mMoney;

    public:
        BankAccount(const string name, const string accountNumber, double money = 0.0);
        void diplay(void );
        void storeMoney(double money);
        void takeOutMoney(double money);
}


6.
 在创建类对象或者显式调用构造函数时，类的构造函数都将被调用。当对象过期时，类的析构函数都被调用。

7.

BankAccount::BankAccount(string name, string accountNumber, double money)
{
    mName = name;
    mAccountNumber = accountNumber;
    mMoney = moneyl;
}


8.
默认构造函数是没有参数或者所有参数都有默认值的构造函数。拥有默认构造函数后，可以声明对象，而不初始化它，即使已经定义了初始化构造函数。


9.

10.
this 是对象的地址， *this是对象本身